{"version":3,"sources":["Helpers/Image/index.js","Helpers/Avatar/Avatar.styled.js","Helpers/Avatar/index.js","Helpers/Dialog/Dialog.styled.js","Helpers/Button/Button.styled.js","Helpers/Button/index.js","Helpers/Dialog/index.js","Pages/Home/Home.styled.js","Pages/Home/index.js"],"names":["Image","React","memo","props","src","alt","_onImgClick","height","width","className","children","onClick","getSize","size","toString","charAt","toUpperCase","dim","_scale","_40px","_32px","_24px","StyledAvatar","styled","div","bgColor","theme","color","base_0","white","_20px","_16px","_12px","Avatar","useState","image","setImage","useEffect","id","hidden","DialogStyleContainer","Modal","headerBackground","blue_20","headingPadding","headerColor","bodyPadding","base_20","base_80","_8px","getButtonColor","primaryBtn","disabled","button_disabled","buttonColor","blue_50","state","StyledButton","button","fontSize","_14px","imageUrl","_4px","base_30","fontColor","text_low_emphasis","getColor","secondaryBtn","borderRadius","hoverBoxShadow","hoverColor","activeBoxShadow","activeColor","Button","value","_onClick","buttonState","setButtonState","onMouseEnter","onMouseLeave","Dialog","isOpen","setOpenState","openModalBox","toggleModal","onDialogClose","onBackgroundClick","onEscapeKeydown","heading","body","dangerouslySetInnerHTML","__html","actionView","textSecondaryButton","style","marginLeft","bgSecondaryButton","colorSecondaryButton","hoverSecondaryButton","activeSecondaryButton","hoverShadow","onSecondaryButtonClick","defaultBorder","bgPrimaryButton","colorPrimaryButton","textPrimaryButton","defaultBoxShadow","onPrimaryButtonClick","HomeStyleContainer","Styled","Home","animalData","showDialogBox","setShowDialogBox","imageName","setImageName","imageDesc","setImageDesc","userDataToRender","setUserDataToRender","showEditName","setShowEditName","showEditDesc","setShowEditDesc","renderImages","resultArray","length","myArray","chunk_size","index","arrayLength","tempArray","myChunk","slice","push","chunkArray","map","innerArr","item","key","urls","full","alt_description","data","description","_handleDialogCrossClick","temp","dispatch","saveImageData","_handleSaveButton","user","profile_image","medium","username","Input","_onChange","e","target","_onBlur","connect","getAnimalDataSelector"],"mappings":"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","file":"static/js/3.61e9638f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Image = React.memo((props) => {\n  const { src, alt, _onImgClick, height, width, className, children } = props;\n  return(\n    <>\n      <img\n        className={className}\n        src={src}\n        alt={alt}\n        height={height}\n        width={width}\n        onClick={_onImgClick}\n      />\n      {children}\n    </>\n  );\n})\n\nexport default Image;","import styled from 'styled-components';\nimport { dim } from 'Styles/theme';\n\nconst getSize = (props) => {\n  switch (props.size.toString().charAt(0).toUpperCase()) {\n    case 'X': return dim._scale(96);\n    case 'L': return dim._40px;\n    case 'M': return dim._32px;\n    case 'S': return dim._24px;\n    default: return dim._32px;\n  }\n};\n\nconst StyledAvatar = styled.div`\n.avatarContainer {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.defaultImage {\n    width: ${props => getSize(props)};\n    height: ${props => getSize(props)};\n    border-radius: 100%;\n    border: 1px solid ${props => props.bgColor ? props.bgColor : props.theme.color.base_0};\n}\n\n.defaultText {\n    position: absolute;\n    color: ${props => props.theme.color.white};\n    font-size: ${(props) => {\n      switch (props.size.toString().charAt(0).toUpperCase()) {\n        case 'X': return dim._40px;\n        case 'L': return dim._20px;\n        case 'M': return dim._16px;\n        case 'S': return dim._12px;\n        default: return dim._16px;\n      }\n    }};\n    margin: 0;\n}\n`;\n\nexport default StyledAvatar;\n","import React, { useState, useEffect } from 'react';\nimport StyledAvatar from './Avatar.styled';\n\nconst Avatar = React.memo(function Avatar(props) {\n  const [image, setImage] = useState(null);\n\n  useEffect(() => {\n    setImage(props.image);\n  }, [props.image]);\n\n  return (\n    <StyledAvatar\n      className={props.className}\n      size={props.size}\n      bgColor={props.bgColor}\n    >\n      <div className=\"avatarContainer\">\n          <img\n            className=\"defaultImage\"\n            src={image}\n            alt=\"avatar\"\n            id=\"image\"\n            hidden={image == null}\n          />\n      </div>\n    </StyledAvatar >\n  );\n});\n\nexport default Avatar;","import Modal from 'styled-react-modal';\nimport { dim } from 'Styles/theme';\n\nconst DialogStyleContainer = Modal.styled`\nwidth: ${dim._scale(680)};\nalign-items: center;\njustify-content: center;\nbackground-color: white;\ntransition: opacity ease 500ms;\nborder-radius: 4px;\npadding: ${dim._12px};\n\n.dialogHeading {\n  background-color: ${props => props.headerBackground || props.theme.color.blue_20};\n  padding: ${props => props.headingPadding || dim._24px};\n  color: ${props => props.headerColor || props.theme.color.white};\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n}\n\n.dialogBody {\n  padding: ${props => props.bodyPadding || dim._24px};\n  color: ${props => props.theme.color.base_20};\n}\n\n.dialogDivider {\n  height: 2px;\n  background-color: ${props => props.theme.color.base_80};\n}\n\n.dialogButtonContainer {\n  padding: ${dim._24px};\n  display: flex;\n  flex: 1;\n  flex-direction: row-reverse;\n}\n\n.dialogBodyHeading {\n  font-weight: 600;\n  font-size: ${dim._12px};\n  line-height: 16px;\n  letter-spacing: 0.02em;\n  color: #6C6D6F;\n  margin-left: ${dim._24px};\n}\n\n.dialogBodyContainer {\n  display: flex;\n  flex-direction: column;\n}\n\n.dialogImageURL {\n  display: flex;\n  justify-content: center;\n  img {\n    width: ${dim._scale(420)};\n    height: ${dim._scale(420)};\n  }\n}\n\n.dialogUserName {\n  display: flex;\n  align-items: center;\n  margin: ${dim._8px} 0px;\n  span {\n    margin-left: ${dim._8px};\n  }\n}\n\n.dialogDetailContainer {\n  margin: ${dim._12px} 0px;\n}\n\n.dialogImageName {\n  text-transform: capitalize;\n  margin-bottom: ${dim._8px};\n  :hover{\n    cursor: pointer;\n  }\n}\n\n.dialogImageDesc {\n  :hover{\n    cursor: pointer;\n  }\n}\n\n`;\n\nexport default DialogStyleContainer;\n","import styled from 'styled-components';\nimport { dim } from 'Styles/theme';\n\nconst getButtonColor = (props) => {\n  if (props.primaryBtn) {\n    if (props.disabled) return props.theme.color.button_disabled;\n    return props.buttonColor || props.theme.color.blue_50;\n  }\n  if (props.disabled) return props.theme.color.white;\n  if (props.state === 'enter') return props.buttonColor || props.theme.white;\n  return props.buttonColor || props.theme.color.white;\n};\n\nconst getColor = (props) => {\n  if (props.primaryBtn) {\n    if (props.disabled) return props.theme.color.base_30;\n    return props.fontColor || props.theme.color.white;\n  }\n  if (props.disabled) return props.theme.color.text_low_emphasis;\n  return props.fontColor || props.theme.color.blue_50;\n};\n\nconst StyledButton = styled.button`\n  display: flex;\n  height: ${props => (props.height ? dim._scale(props.height) : 'auto')};\n  width: ${props => (props.width || '100%')};\n  font-size:${props => (props.fontSize || dim._14px)};\n  align-items: center;\n  justify-content: center;\n  padding: ${props => props.imageUrl ? `${dim._4px} ${dim._16px} ${dim._4px} ${dim._12px}` : `${dim._8px} ${dim._16px}`};\n  color: ${props => getColor(props)};\n  background-color: ${props => getButtonColor(props)};\n  border: ${(props) => {\n    return props.secondaryBtn ? `1px solid ${(props.fontColor || props.theme.color.blue_50, '.1')}` : '0px';\n  }};\n  border-radius: ${props => (props.borderRadius || dim._4px)};\n  cursor: ${props => !props.disabled ? 'pointer' : 'default'};\n\n  box-shadow: ${props => !props.disabled ? '0 1px 2px 0 rgba(9, 30, 66, 0.15), 0 0 1px 0 rgba(9, 30, 66, 0.25)' : ''};\n  transition: 0.2s ease-out;\n\n  :hover {\n    box-shadow: ${props => !props.disabled && props.hoverBoxShadow || 0};\n    background-color: ${props => !props.disabled && props.hoverColor || getButtonColor(props)};\n  }\n\n  :active {\n    box-shadow: ${props => !props.disabled && props.activeBoxShadow || 0};\n    background-color: ${props => !props.disabled && props.activeColor || getButtonColor(props)};\n  }\n\n  .loaderImage {\n    width: 40px;\n    height: 40px;\n    z-index: 9;\n  }\n\n  .buttonImage {\n    margin-right: ${dim._12px}\n  }\n`;\n\nexport default StyledButton;\n","import React, { useState } from 'react';\n\nimport StyledButton from './Button.styled';\n\nconst Button = (props) => {\n  const { value, _onClick } = props;\n\n  const [buttonState, setButtonState] = useState('default');\n  return(\n    <StyledButton\n    {...props}\n    onMouseEnter={() => props.onMouseEnter ? props.onMouseEnter() : setButtonState('enter')}\n    onMouseLeave={() => props.onMouseLeave ? props.onMouseLeave() : setButtonState('default')}\n    className={props.className ? `${props.className} button14` : 'button14'}\n    state={buttonState}\n    hidden={props.hidden}\n    onClick={() => _onClick()}\n  >\n    {value}\n  </StyledButton>\n  );\n}\n\nexport default Button;","/* eslint-disable react/no-danger */\nimport React, { useState, useEffect } from 'react';\n\nimport DialogStyleContainer from './Dialog.styled';\n\nimport Button from '../Button';\n\n/**\n * Dialog component to render alert dialog with custom heading, message and actions/buttons.\n * @param {String} bgSecondaryButton\n * @param {String} colorSecondaryButton\n * @param {String} textSecondaryButton\n * @param {String} bgPrimaryButton\n * @param {String} colorPrimaryButton\n * @param {String} textPrimaryButton\n */\nconst Dialog = (props) => {\n  const [isOpen, setOpenState] = useState(false);\n  useEffect(() => setOpenState(props.openModalBox), [props.openModalBox]);\n\n  const toggleModal = () => {\n    setOpenState(!isOpen);\n    if (props.onDialogClose) {\n      props.onDialogClose();\n    }\n  };\n\n  const _handelPrimaryButtonClick = () => {\n    toggleModal();\n    if (props.onPrimaryButtonClick) {\n      props.onPrimaryButtonClick();\n    }\n  };\n\n  const _handelSecondaryButtonClick = () => {\n    toggleModal();\n    if (props.onSecondaryButtonClick) {\n      props.onSecondaryButtonClick();\n    }\n  };\n\n  function renderDialogActionButtons() {\n    return (\n      <>\n        {\n          props.textSecondaryButton ?\n            <Button\n              className='button14'\n              style={{ marginLeft: '8px' }}\n              buttonColor={props.bgSecondaryButton ? props.bgSecondaryButton : '#4bb530'}\n              fontColor={props.colorSecondaryButton ? props.colorSecondaryButton : '#000'}\n              hoverColor={props.hoverSecondaryButton ? props.hoverSecondaryButton : '#a2e890'}\n              activeColor={props.activeSecondaryButton ? props.activeSecondaryButton : '#42d61d'}\n              hoverBoxShadow={props.hoverShadow ? props.hoverShadow : '0 1px 2px 0 rgba(9, 30, 66, 0.15), 0 0 1px 0 rgba(9, 30, 66, 0.25), 0 4px 8px 0 rgba(223, 46, 46, 0.25)'}\n              activeBoxShadow='0 1px 2px 0 rgba(9, 30, 66, 0.15), 0 0 1px 0 rgba(9, 30, 66, 0.25)'\n              value={props.textSecondaryButton}\n              _onClick={() => _handelSecondaryButtonClick()}\n              width=\"auto\"\n            />\n            : ''\n        }\n        <Button\n          className='button14'\n          defaultBorder={props.defaultBorder || !props.bgPrimaryButton}\n          buttonColor={props.bgPrimaryButton ? props.bgPrimaryButton : '#ffffff'}\n          fontColor={props.colorPrimaryButton ? props.colorPrimaryButton : '#54555d'}\n          value={props.textPrimaryButton ? props.textPrimaryButton : 'Close'}\n          hoverColor='#ffffff'\n          activeColor='#f8f8fa'\n          hoverBoxShadow='0 1px 2px 0 rgba(9, 30, 66, 0.15), 0 0 1px 0 rgba(9, 30, 66, 0.25), 0 4px 8px 0 rgba(9, 30, 66, 0.15)'\n          activeBoxShadow='0 1px 2px 0 rgba(9, 30, 66, 0.15), 0 0 1px 0 rgba(9, 30, 66, 0.25)'\n          defaultBoxShadow='0 1px 2px 0 rgba(9, 30, 66, 0.15), 0 0 1px 0 rgba(9, 30, 66, 0.25)'\n          _onClick={() => _handelPrimaryButtonClick()}\n          width=\"auto\"\n        />\n      </>\n    );\n  };\n  return (\n    <DialogStyleContainer\n      {...props}\n      onBackgroundClick={toggleModal}\n      onEscapeKeydown={toggleModal}\n      hidden={props.hidden}\n      isOpen={isOpen}\n    >\n      {props.heading && <div className='dialogHeading header20'>{props.heading}</div>}\n      {props.body && <div className='dialogBody body16' dangerouslySetInnerHTML={{ __html: props.body }} />}\n      {props.children}\n      <div className='dialogDivider' />\n      <div className='dialogButtonContainer'>\n        {props.actionView ? props.actionView() : renderDialogActionButtons()}\n      </div>\n    </DialogStyleContainer>\n  );\n\n};\n\nexport default Dialog;","import Styled from 'styled-components';\n\nimport { dim } from 'Styles/theme';\n\nconst HomeStyleContainer = Styled.div`\ndisplay: flex;\nflex-direction: row;\n\n.imageContainer {\n  display: flex;\n  flex-direction: column;\n  flex: 33.33%;\n  height: 100%;\n}\n\n.imageRow {\n  padding: ${dim._4px};\n}\n\n.randomImage {\n  width: 100%;\n  height: auto;\n  background-color: ${props => props.theme.color.base_30};\n}\n\n`;\n\nexport default HomeStyleContainer;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport Avatar from 'Helpers/Avatar';\nimport Image from 'Helpers/Image';\nimport Input from 'Helpers/Input';\nimport Dialog from 'Helpers/Dialog';\n\nimport { saveImageData } from 'Components/Header/store/action';\nimport {\n  getAnimalDataSelector\n} from 'Components/Header/store/reducer';\n\nimport HomeStyleContainer from './Home.styled';\n\nconst Home = React.memo((props) => {\n  const { animalData } = props;\n\n  const [showDialogBox, setShowDialogBox] = useState(false);\n  const [imageName, setImageName] = useState('');\n  const [imageDesc, setImageDesc] = useState('');\n  const [userDataToRender, setUserDataToRender] = useState('');\n  const [showEditName, setShowEditName] = useState(false);\n  const [showEditDesc, setShowEditDesc] = useState(false);\n\n  const chunkArray = (myArray, chunk_size) => {\n      var index = 0;\n      var arrayLength = myArray.length;\n      var tempArray = [];\n      \n      for (index = 0; index < arrayLength; index += chunk_size) {\n          const myChunk = myArray.slice(index, index+chunk_size);\n          // Do something if you want with the group\n          tempArray.push(myChunk);\n      }\n  \n      return tempArray;\n  };\n\n  const renderImages = () => {\n    let resultArray = [];\n    if(animalData && animalData.length > 0){\n      resultArray = chunkArray(animalData, animalData.length/3);\n    }\n    return resultArray;\n  };\n\n  const _handleImageClick = (data) => {\n    setUserDataToRender(data);\n    setImageName(data.alt_description);\n    setImageDesc(data.description);\n    if(data.description  || data.alt_description){\n      setShowDialogBox(true);\n    }\n  };\n\n  const _handleSaveButton = (data) => {\n      let temp = data;\n      temp.alt_description = imageName;\n      temp.description = imageDesc;\n    setShowDialogBox(false);\n    props.dispatch(saveImageData(animalData, temp));\n  };\n\n  return(\n    <HomeStyleContainer>\n      {renderImages() && renderImages().length > 0 && renderImages().map((innerArr, index) => {\n        return <div className='imageContainer'>\n          {innerArr.map(item => {\n            return(\n              <div key={item.id} className='imageRow'>\n                  <Image\n                    className='randomImage'\n                    src={item.urls.full}\n                    alt={item.alt_description}\n                    _onImgClick={() => _handleImageClick(item)}\n                  />\n              </div>\n            );\n          })}\n        </div>\n      })}\n      {showDialogBox &&\n        <Dialog\n          openModalBox={showDialogBox}\n          onDialogClose={() => setShowDialogBox(false)}\n          _handleDialogCrossClick={() => setShowDialogBox(false)}\n          textPrimaryButton=\"Cancel\"\n          textSecondaryButton=\"Save\"\n          onPrimaryButtonClick={() => setShowDialogBox(false)}\n          onSecondaryButtonClick={() => _handleSaveButton(userDataToRender)}\n        >\n          <div className='dialogBodyContainer'>\n            <div className='dialogUserName'>\n              <Avatar image={userDataToRender.user.profile_image.medium} size='M' bgColor={userDataToRender.color} />\n              <span style={{color: userDataToRender.color}}>{userDataToRender.user.username}</span>\n            </div>\n            <div className='dialogImageURL'>\n              <Image src={userDataToRender.urls.full} />\n            </div>\n            <div className='dialogDetailContainer'>\n              {showEditName ?\n                <Input\n                  value={imageName}\n                  _onChange={(e) => setImageName(e.target.value)}\n                  _onBlur={() => setShowEditName(false)}\n                />\n                :\n                <div className='dialogImageName' onClick={() => setShowEditName(true)}>{imageName}</div>\n              }\n              {showEditDesc ?\n                <Input\n                  value={imageDesc}\n                  _onChange={(e) => setImageDesc(e.target.value)}\n                  _onBlur={() => setShowEditDesc(false)}\n                />\n                :\n                <div className='dialogImageDesc' onClick={() => setShowEditDesc(true)}>{imageDesc}</div>\n              }\n            </div>\n          </div>\n        </Dialog>\n      }\n    </HomeStyleContainer>\n  );\n})\n\n\nconst mapStateToProps = state => ({\n  animalData: getAnimalDataSelector(state)\n});\n\nexport default connect(mapStateToProps)(Home);"],"sourceRoot":""}