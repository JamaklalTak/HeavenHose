{"version":3,"sources":["Helpers/Avatar/Avatar.styled.js","Helpers/Avatar/index.js","Helpers/Dialog/Dialog.styled.js","Helpers/Button/Button.styled.js","Helpers/Button/index.js","Helpers/Dialog/index.js","Pages/Home/Home.styled.js","Pages/Home/index.js"],"names":["getSize","props","size","toString","charAt","toUpperCase","dim","_scale","_40px","_32px","_24px","StyledAvatar","styled","div","bgColor","theme","color","base_0","white","_20px","_16px","_12px","Avatar","React","memo","useState","image","setImage","useEffect","className","src","alt","id","hidden","DialogStyleContainer","Modal","headerBackground","blue_20","headingPadding","headerColor","bodyPadding","base_20","base_80","_8px","getButtonColor","primaryBtn","disabled","base_100","buttonColor","blue_50","state","StyledButton","button","height","width","_4px","base_30","fontColor","text_low_emphasis","getColor","secondaryBtn","borderRadius","hoverBoxShadow","hoverColor","activeBoxShadow","activeColor","Button","value","_onClick","buttonState","setButtonState","onMouseEnter","onMouseLeave","onClick","Dialog","isOpen","setOpenState","openModalBox","toggleModal","onDialogClose","onBackgroundClick","onEscapeKeydown","heading","body","dangerouslySetInnerHTML","__html","children","actionView","textSecondaryButton","disableSecondaryButton","style","marginLeft","bgSecondaryButton","colorSecondaryButton","hoverSecondaryButton","activeSecondaryButton","hoverShadow","onSecondaryButtonClick","defaultBorder","bgPrimaryButton","colorPrimaryButton","textPrimaryButton","defaultBoxShadow","onPrimaryButtonClick","HomeStyleContainer","Styled","Home","animalData","showDialogBox","setShowDialogBox","imageName","setImageName","imageDesc","setImageDesc","userDataToRender","setUserDataToRender","showEditName","setShowEditName","showEditDesc","setShowEditDesc","renderImages","resultArray","length","myArray","chunk_size","index","arrayLength","tempArray","myChunk","slice","push","chunkArray","map","innerArr","item","key","Image","urls","full","alt_description","_onImgClick","data","description","_handleDialogCrossClick","temp","dispatch","saveImageData","_handleSaveButton","user","profile_image","medium","username","Input","_onChange","e","target","_onBlur","connect","getAnimalDataSelector"],"mappings":"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","file":"static/js/3.2c259983.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { dim } from 'Styles/theme';\n\nconst getSize = (props) => {\n  switch (props.size.toString().charAt(0).toUpperCase()) {\n    case 'X': return dim._scale(96);\n    case 'L': return dim._40px;\n    case 'M': return dim._32px;\n    case 'S': return dim._24px;\n    default: return dim._32px;\n  }\n};\n\nconst StyledAvatar = styled.div`\n.avatarContainer {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.defaultImage {\n    width: ${props => getSize(props)};\n    height: ${props => getSize(props)};\n    border-radius: 100%;\n    border: 1px solid ${props => props.bgColor ? props.bgColor : props.theme.color.base_0};\n}\n\n.defaultText {\n    position: absolute;\n    color: ${props => props.theme.color.white};\n    font-size: ${(props) => {\n      switch (props.size.toString().charAt(0).toUpperCase()) {\n        case 'X': return dim._40px;\n        case 'L': return dim._20px;\n        case 'M': return dim._16px;\n        case 'S': return dim._12px;\n        default: return dim._16px;\n      }\n    }};\n    margin: 0;\n}\n`;\n\nexport default StyledAvatar;\n","import React, { useState, useEffect } from 'react';\nimport StyledAvatar from './Avatar.styled';\n\nconst Avatar = React.memo(function Avatar(props) {\n  const [image, setImage] = useState(null);\n\n  useEffect(() => {\n    setImage(props.image);\n  }, [props.image]);\n\n  return (\n    <StyledAvatar\n      className={props.className}\n      size={props.size}\n      bgColor={props.bgColor}\n    >\n      <div className=\"avatarContainer\">\n          <img\n            className=\"defaultImage\"\n            src={image}\n            alt=\"avatar\"\n            id=\"image\"\n            hidden={image == null}\n          />\n      </div>\n    </StyledAvatar >\n  );\n});\n\nexport default Avatar;","import Modal from 'styled-react-modal';\nimport { dim } from 'Styles/theme';\n\nconst DialogStyleContainer = Modal.styled`\nwidth: ${dim._scale(680)};\nalign-items: center;\njustify-content: center;\nbackground-color: white;\ntransition: opacity ease 500ms;\nborder-radius: 4px;\npadding: ${dim._12px};\n\n.dialogHeading {\n  background-color: ${props => props.headerBackground || props.theme.color.blue_20};\n  padding: ${props => props.headingPadding || dim._24px};\n  color: ${props => props.headerColor || props.theme.color.white};\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n}\n\n.dialogBody {\n  padding: ${props => props.bodyPadding || dim._24px};\n  color: ${props => props.theme.color.base_20};\n}\n\n.dialogDivider {\n  height: 2px;\n  background-color: ${props => props.theme.color.base_80};\n}\n\n.dialogButtonContainer {\n  padding: ${dim._24px};\n  display: flex;\n  flex: 1;\n  flex-direction: row-reverse;\n}\n\n.dialogBodyHeading {\n  font-weight: 600;\n  font-size: ${dim._12px};\n  line-height: 16px;\n  letter-spacing: 0.02em;\n  color: #6C6D6F;\n  margin-left: ${dim._24px};\n}\n\n.dialogBodyContainer {\n  display: flex;\n  flex-direction: column;\n}\n\n.dialogImageURL {\n  display: flex;\n  justify-content: center;\n  img {\n    width: ${dim._scale(420)};\n    height: ${dim._scale(420)};\n  }\n}\n\n.dialogUserName {\n  display: flex;\n  align-items: center;\n  margin: ${dim._8px} 0px;\n  span {\n    margin-left: ${dim._8px};\n  }\n}\n\n.dialogDetailContainer {\n  margin: ${dim._12px} 0px;\n}\n\n.dialogImageName {\n  text-transform: capitalize;\n  margin-bottom: ${dim._8px};\n  :hover{\n    cursor: pointer;\n  }\n}\n\n.dialogImageDesc {\n  :hover{\n    cursor: pointer;\n  }\n}\n\n`;\n\nexport default DialogStyleContainer;\n","import styled from 'styled-components';\nimport { dim } from 'Styles/theme';\n\nconst getButtonColor = (props) => {\n  if (props.primaryBtn) {\n    if (props.disabled) return props.theme.color.base_100;\n    return props.buttonColor || props.theme.color.blue_50;\n  }\n  if (props.disabled) return props.theme.color.white;\n  if (props.state === 'enter') return props.buttonColor || props.theme.white;\n  return props.buttonColor || props.theme.color.white;\n};\n\nconst getColor = (props) => {\n  if (props.primaryBtn) {\n    if (props.disabled) return props.theme.color.base_30;\n    return props.fontColor || props.theme.color.white;\n  }\n  if (props.disabled) return props.theme.color.text_low_emphasis;\n  return props.fontColor || props.theme.color.blue_50;\n};\n\nconst StyledButton = styled.button`\n  display: flex;\n  height: ${props => (props.height ? dim._scale(props.height) : 'auto')};\n  width: ${props => (props.width || '100%')};\n  align-items: center;\n  justify-content: center;\n  padding: ${dim._4px} ${dim._16px} ${dim._4px} ${dim._12px};\n  color: ${props => getColor(props)};\n  background-color: ${props => getButtonColor(props)};\n  border: ${(props) => {\n    return props.secondaryBtn ?\n    `1px solid ${(props.fontColor || props.theme.color.blue_50, '.1')}`\n    :\n    `1px solid ${props => props.theme.color.base_30}`;\n  }};\n  border-radius: ${props => (props.borderRadius || '4px')};\n  cursor: ${props => !props.disabled ? 'pointer' : 'default'};\n\n  box-shadow: ${props => !props.disabled ? '0 1px 2px 0 rgba(9, 30, 66, 0.15), 0 0 1px 0 rgba(9, 30, 66, 0.25)' : ''};\n  transition: 0.2s ease-out;\n\n  :hover {\n    box-shadow: ${props => !props.disabled && props.hoverBoxShadow || 0};\n    background-color: ${props => !props.disabled && props.hoverColor || getButtonColor(props)};\n  }\n\n  :active {\n    box-shadow: ${props => !props.disabled && props.activeBoxShadow || 0};\n    background-color: ${props => !props.disabled && props.activeColor || getButtonColor(props)};\n  }\n\n  .loaderImage {\n    width: 40px;\n    height: 40px;\n    z-index: 9;\n  }\n\n  .buttonImage {\n    margin-right: ${dim._12px}\n  }\n`;\n\nexport default StyledButton;\n","import React, { useState } from 'react';\n\nimport StyledButton from './Button.styled';\n\nconst Button = (props) => {\n  const { value, _onClick, disabled } = props;\n\n  const [buttonState, setButtonState] = useState('default');\n  return(\n    <StyledButton\n    {...props}\n    onMouseEnter={() => props.onMouseEnter ? props.onMouseEnter() : setButtonState('enter')}\n    onMouseLeave={() => props.onMouseLeave ? props.onMouseLeave() : setButtonState('default')}\n    className={`textBold14 ${props.className ? props.className : ''}`}\n    state={buttonState}\n    hidden={props.hidden}\n    onClick={() => _onClick()}\n    disabled={disabled}\n  >\n    {value}\n  </StyledButton>\n  );\n}\n\nexport default Button;","/* eslint-disable react/no-danger */\nimport React, { useState, useEffect } from 'react';\n\nimport DialogStyleContainer from './Dialog.styled';\n\nimport Button from '../Button';\n\n/**\n * Dialog component to render alert dialog with custom heading, message and actions/buttons.\n * @param {String} bgSecondaryButton\n * @param {String} colorSecondaryButton\n * @param {String} textSecondaryButton\n * @param {String} bgPrimaryButton\n * @param {String} colorPrimaryButton\n * @param {String} textPrimaryButton\n */\nconst Dialog = (props) => {\n  const [isOpen, setOpenState] = useState(false);\n  useEffect(() => setOpenState(props.openModalBox), [props.openModalBox]);\n\n  const toggleModal = () => {\n    setOpenState(!isOpen);\n    if (props.onDialogClose) {\n      props.onDialogClose();\n    }\n  };\n\n  const _handelPrimaryButtonClick = () => {\n    toggleModal();\n    if (props.onPrimaryButtonClick) {\n      props.onPrimaryButtonClick();\n    }\n  };\n\n  const _handelSecondaryButtonClick = () => {\n    toggleModal();\n    if (props.onSecondaryButtonClick) {\n      props.onSecondaryButtonClick();\n    }\n  };\n\n  function renderDialogActionButtons() {\n    return (\n      <>\n        {\n          props.textSecondaryButton ?\n            <Button\n              disabled={props.disableSecondaryButton}\n              style={{ marginLeft: '8px' }}\n              buttonColor={props.bgSecondaryButton ? props.bgSecondaryButton : '#4bb530'}\n              fontColor={props.colorSecondaryButton ? props.colorSecondaryButton : '#fff'}\n              hoverColor={props.hoverSecondaryButton ? props.hoverSecondaryButton : '#4bb530'}\n              activeColor={props.activeSecondaryButton ? props.activeSecondaryButton : '#42d61d'}\n              hoverBoxShadow={props.hoverShadow ? props.hoverShadow : '0 1px 2px 0 rgba(9, 30, 66, 0.15), 0 0 1px 0 rgba(9, 30, 66, 0.25), 0 4px 8px 0 rgba(223, 46, 46, 0.25)'}\n              activeBoxShadow='0 1px 2px 0 rgba(9, 30, 66, 0.15), 0 0 1px 0 rgba(9, 30, 66, 0.25)'\n              value={props.textSecondaryButton}\n              _onClick={() => _handelSecondaryButtonClick()}\n              width=\"auto\"\n            />\n            : ''\n        }\n        <Button\n          defaultBorder={props.defaultBorder || !props.bgPrimaryButton}\n          buttonColor={props.bgPrimaryButton ? props.bgPrimaryButton : '#ffffff'}\n          fontColor={props.colorPrimaryButton ? props.colorPrimaryButton : '#54555d'}\n          value={props.textPrimaryButton ? props.textPrimaryButton : 'Close'}\n          hoverColor='#ffffff'\n          activeColor='#f8f8fa'\n          hoverBoxShadow='0 1px 2px 0 rgba(9, 30, 66, 0.15), 0 0 1px 0 rgba(9, 30, 66, 0.25), 0 4px 8px 0 rgba(9, 30, 66, 0.15)'\n          activeBoxShadow='0 1px 2px 0 rgba(9, 30, 66, 0.15), 0 0 1px 0 rgba(9, 30, 66, 0.25)'\n          defaultBoxShadow='0 1px 2px 0 rgba(9, 30, 66, 0.15), 0 0 1px 0 rgba(9, 30, 66, 0.25)'\n          _onClick={() => _handelPrimaryButtonClick()}\n          width=\"auto\"\n        />\n      </>\n    );\n  };\n  return (\n    <DialogStyleContainer\n      {...props}\n      onBackgroundClick={toggleModal}\n      onEscapeKeydown={toggleModal}\n      hidden={props.hidden}\n      isOpen={isOpen}\n    >\n      {props.heading && <div className='dialogHeading header20'>{props.heading}</div>}\n      {props.body && <div className='dialogBody body16' dangerouslySetInnerHTML={{ __html: props.body }} />}\n      {props.children}\n      <div className='dialogDivider' />\n      <div className='dialogButtonContainer'>\n        {props.actionView ? props.actionView() : renderDialogActionButtons()}\n      </div>\n    </DialogStyleContainer>\n  );\n\n};\n\nexport default Dialog;","import Styled from 'styled-components';\n\nimport { dim } from 'Styles/theme';\n\nconst HomeStyleContainer = Styled.div`\ndisplay: flex;\nflex-direction: row;\n\n.imageContainer {\n  display: flex;\n  flex-direction: column;\n  flex: 33.33%;\n  height: 100%;\n}\n\n.imageRow {\n  padding: ${dim._4px};\n}\n\n.randomImage {\n  width: 100%;\n  height: auto;\n  background-color: ${props => props.theme.color.base_30};\n}\n\n`;\n\nexport default HomeStyleContainer;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport Avatar from 'Helpers/Avatar';\nimport Image from 'Helpers/Image';\nimport Input from 'Helpers/Input';\nimport Dialog from 'Helpers/Dialog';\n\nimport { saveImageData } from 'Components/Header/store/action';\nimport {\n  getAnimalDataSelector\n} from 'Components/Header/store/reducer';\n\nimport HomeStyleContainer from './Home.styled';\n\nconst Home = React.memo((props) => {\n  const { animalData } = props;\n\n  const [showDialogBox, setShowDialogBox] = useState(false);\n  const [imageName, setImageName] = useState('');\n  const [imageDesc, setImageDesc] = useState('');\n  const [userDataToRender, setUserDataToRender] = useState('');\n  const [showEditName, setShowEditName] = useState(false);\n  const [showEditDesc, setShowEditDesc] = useState(false);\n\n  const chunkArray = (myArray, chunk_size) => {\n      var index = 0;\n      var arrayLength = myArray.length;\n      var tempArray = [];\n      \n      for (index = 0; index < arrayLength; index += chunk_size) {\n          const myChunk = myArray.slice(index, index+chunk_size);\n          // Do something if you want with the group\n          tempArray.push(myChunk);\n      }\n  \n      return tempArray;\n  };\n\n  const renderImages = () => {\n    let resultArray = [];\n    if(animalData && animalData.length > 0){\n      resultArray = chunkArray(animalData, animalData.length/3);\n    }\n    return resultArray;\n  };\n\n  const _handleImageClick = (data) => {\n    setUserDataToRender(data);\n    setImageName(data.alt_description);\n    setImageDesc(data.description);\n    setShowDialogBox(true);\n  };\n\n  const _handleSaveButton = (data) => {\n      let temp = data;\n      temp.alt_description = imageName;\n      temp.description = imageDesc;\n    setShowDialogBox(false);\n    props.dispatch(saveImageData(animalData, temp));\n  };\n\n  return(\n    <HomeStyleContainer>\n      {renderImages() && renderImages().length > 0 && renderImages().map((innerArr, index) => {\n        return <div className='imageContainer'>\n          {innerArr.map(item => {\n            return(\n              <div key={item.id} className='imageRow'>\n                  <Image\n                    className='randomImage'\n                    src={item.urls.full}\n                    alt={item.alt_description}\n                    _onImgClick={() => _handleImageClick(item)}\n                  />\n              </div>\n            );\n          })}\n        </div>\n      })}\n      {showDialogBox &&\n        <Dialog\n          openModalBox={showDialogBox}\n          onDialogClose={() => setShowDialogBox(false)}\n          _handleDialogCrossClick={() => setShowDialogBox(false)}\n          textPrimaryButton=\"Cancel\"\n          textSecondaryButton=\"Save\"\n          disableSecondaryButton={!(imageName || imageDesc)}\n          onPrimaryButtonClick={() => setShowDialogBox(false)}\n          onSecondaryButtonClick={() => _handleSaveButton(userDataToRender)}\n        >\n          <div className='dialogBodyContainer'>\n            <div className='dialogUserName'>\n              <Avatar image={userDataToRender.user.profile_image.medium} size='M' bgColor={'#e0891a'} />\n              <span style={{color: '#0c0c0c'}} className='text16'>{userDataToRender.user.username}</span>\n            </div>\n            <div className='dialogImageURL'>\n              <Image src={userDataToRender.urls.full} />\n            </div>\n            <div className='dialogDetailContainer'>\n              {showEditName ?\n                <Input\n                  value={imageName}\n                  _onChange={(e) => setImageName(e.target.value)}\n                  _onBlur={() => setShowEditName(false)}\n                />\n                :\n                <div className='dialogImageName textBold14' onClick={() => setShowEditName(true)}>\n                  {imageName ? imageName : 'Add Name'}\n                </div>\n              }\n              {showEditDesc ?\n                <Input\n                  value={imageDesc}\n                  _onChange={(e) => setImageDesc(e.target.value)}\n                  _onBlur={() => setShowEditDesc(false)}\n                />\n                :\n                <div className='dialogImageDesc text14' onClick={() => setShowEditDesc(true)}>\n                  {imageDesc ? imageDesc : 'Add Description'}\n                </div>\n              }\n            </div>\n          </div>\n        </Dialog>\n      }\n    </HomeStyleContainer>\n  );\n})\n\n\nconst mapStateToProps = state => ({\n  animalData: getAnimalDataSelector(state)\n});\n\nexport default connect(mapStateToProps)(Home);"],"sourceRoot":""}