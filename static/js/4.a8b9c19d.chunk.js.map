{"version":3,"sources":["Helpers/Avatar/Avatar.styled.js","Helpers/Avatar/index.js","Pages/WithData/WithData.styled.js","Pages/WithData/index.js"],"names":["getSize","props","size","toString","charAt","toUpperCase","dim","_scale","_40px","_32px","_24px","StyledAvatar","styled","div","bgColor","theme","color","base_0","white","_20px","_16px","_12px","Avatar","React","memo","useState","image","setImage","useEffect","className","src","alt","id","hidden","WithDataStyleContainer","Styled","_4px","_8px","base_100","_18px","WithData","animalData","dataToRender","setDataToRender","window","localStorage","getItem","renderImages","resultArray","length","myArray","chunk_size","index","arrayLength","tempArray","myChunk","slice","push","chunkArray","map","innerArr","item","Image","key","width","height","urls","full","alt_description","style","user","profile_image","medium","username","description","connect","state","getAnimalDataSelector"],"mappings":"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","file":"static/js/4.a8b9c19d.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { dim } from 'Styles/theme';\n\nconst getSize = (props) => {\n  switch (props.size.toString().charAt(0).toUpperCase()) {\n    case 'X': return dim._scale(96);\n    case 'L': return dim._40px;\n    case 'M': return dim._32px;\n    case 'S': return dim._24px;\n    default: return dim._32px;\n  }\n};\n\nconst StyledAvatar = styled.div`\n.avatarContainer {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.defaultImage {\n    width: ${props => getSize(props)};\n    height: ${props => getSize(props)};\n    border-radius: 100%;\n    border: 1px solid ${props => props.bgColor ? props.bgColor : props.theme.color.base_0};\n}\n\n.defaultText {\n    position: absolute;\n    color: ${props => props.theme.color.white};\n    font-size: ${(props) => {\n      switch (props.size.toString().charAt(0).toUpperCase()) {\n        case 'X': return dim._40px;\n        case 'L': return dim._20px;\n        case 'M': return dim._16px;\n        case 'S': return dim._12px;\n        default: return dim._16px;\n      }\n    }};\n    margin: 0;\n}\n`;\n\nexport default StyledAvatar;\n","import React, { useState, useEffect } from 'react';\nimport StyledAvatar from './Avatar.styled';\n\nconst Avatar = React.memo(function Avatar(props) {\n  const [image, setImage] = useState(null);\n\n  useEffect(() => {\n    setImage(props.image);\n  }, [props.image]);\n\n  return (\n    <StyledAvatar\n      className={props.className}\n      size={props.size}\n      bgColor={props.bgColor}\n    >\n      <div className=\"avatarContainer\">\n          <img\n            className=\"defaultImage\"\n            src={image}\n            alt=\"avatar\"\n            id=\"image\"\n            hidden={image == null}\n          />\n      </div>\n    </StyledAvatar >\n  );\n});\n\nexport default Avatar;","import Styled from 'styled-components';\n\nimport { dim } from 'Styles/theme';\n\nconst WithDataStyleContainer = Styled.div`\ndisplay: flex;\nflex-direction: row;\n\n.imageContainer {\n  display: flex;\n  flex-direction: column;\n  flex: 33.33%;\n  height: 100%;\n  figure {\n    margin: ${dim._4px};\n    position: relative;\n    figcaption {\n      padding: ${dim._8px};\n      position: absolute;\n      bottom: 0;\n      background-color: transparent;\n      color: ${props => props.theme.color.base_100};\n    }\n  }\n}\n\n.imageName{\n  display: flex;\n  position: absolute;\n  top: ${dim._18px};\n  left: ${dim._8px};\n  width: 60%;\n  text-transform: capitalize;\n}\n\n.userName {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  top: ${dim._8px};\n  right: ${dim._8px};\n  position: absolute;\n  span {\n    margin-left: ${dim._4px};\n  }\n}\n`;\n\nexport default WithDataStyleContainer;","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport Image from 'Helpers/Image';\nimport Avatar from 'Helpers/Avatar';\n\nimport {\n  getAnimalDataSelector\n} from 'Components/Header/store/reducer';\n\nimport WithDataStyleContainer from './WithData.styled';\n\nconst WithData = React.memo((props) => {\n  const { animalData } = props;\n  const [dataToRender, setDataToRender] = useState([]);\n\n  useEffect(() => {\n    const path = window.localStorage.getItem('currentPath');\n    if(path === '/animal'){\n      setDataToRender(animalData);\n    }\n  });\n\n  const chunkArray = (myArray, chunk_size) => {\n      var index = 0;\n      var arrayLength = myArray.length;\n      var tempArray = [];\n      \n      for (index = 0; index < arrayLength; index += chunk_size) {\n          const myChunk = myArray.slice(index, index+chunk_size);\n          // Do something if you want with the group\n          tempArray.push(myChunk);\n      }\n  \n      return tempArray;\n  };\n\n  const renderImages = () => {\n    let resultArray = [];\n    if(dataToRender && dataToRender.length > 0){\n      resultArray = chunkArray(dataToRender, dataToRender.length/3);\n    }\n    return resultArray;\n  };\n\n  return(\n    <WithDataStyleContainer>\n      {renderImages() && renderImages().length > 0 && renderImages().map(innerArr => {\n        return <div className='imageContainer'>\n          {innerArr.map(item => {\n            return(\n              <figure>\n                <Image\n                  key={item.id}\n                  className='randomImage'\n                  width='100%'\n                  height='auto'\n                  src={item.urls.full}\n                  alt={item.alt_description}\n                >\n                  <div className='imageName textBold14' style={{color: item.color}}>{item.alt_description}</div>\n                  <div className='userName textBold14'>\n                      <Avatar image={item.user.profile_image.medium} size='M' bgColor={item.color}/>\n                      <span style={{color: item.color}}>{item.user.username}</span>\n                  </div>\n                </Image>\n                {item.description && <figcaption>\n                  <div className='imageDescription text12'>{item.description}</div>\n                </figcaption>}\n              </figure>\n            );\n          })}\n        </div>\n      })}\n    </WithDataStyleContainer>\n  );\n})\n\n\nconst mapStateToProps = state => ({\n  animalData: getAnimalDataSelector(state)\n});\n\nexport default connect(mapStateToProps)(WithData);"],"sourceRoot":""}